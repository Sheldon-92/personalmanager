openapi: 3.0.3
info:
  title: PersonalManager Local API
  description: |
    PersonalManager Local API v1.0 GA - Production-ready REST API providing comprehensive
    access to tasks, projects, reports and system metrics. This API follows PersonalManager's
    standardized JSON output format with full pagination, filtering, sorting capabilities
    and comprehensive error handling. This is the GA frozen version with zero breaking changes.

    **Version Strategy:**
    - v1.0: GA frozen API with backward compatibility guarantee
    - Breaking changes require new major version
    - Deprecated features marked with x-deprecated extension

    **Performance Targets:**
    - P50 latency: < 100ms
    - P95 latency: < 500ms
    - Availability: 99.9%

    **Rate Limiting:**
    - 1000 requests per minute per client
    - Burst limit: 100 requests per 10 seconds

    **Caching:**
    - ETags supported for conditional requests
    - Cache-Control headers provided
    - Stale-while-revalidate pattern supported
  version: 1.0.0
  contact:
    name: PersonalManager Team
    email: noreply@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  x-api-id: pm-local-api
  x-ga-frozen: true
  x-breaking-changes-policy: "Major version increment required"

servers:
  - url: http://localhost:8000
    description: Local development server
    x-environment: development
  - url: http://localhost:8001
    description: Local testing server
    x-environment: testing

security: []

x-rate-limit-global:
  requests: 1000
  window: "1m"
  burst: 100

paths:
  /:
    get:
      summary: API Information
      description: Returns basic API information and available endpoints
      operationId: getApiInfo
      tags:
        - Info
      responses:
        '200':
          description: API information
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - version
                  - description
                  - endpoints
                properties:
                  name:
                    type: string
                    example: "PersonalManager API"
                  version:
                    type: string
                    example: "1.0.0"
                  description:
                    type: string
                  endpoints:
                    type: object
                  documentation:
                    type: string
                  x-api-features:
                    type: object
                    properties:
                      pagination:
                        type: boolean
                        example: true
                      filtering:
                        type: boolean
                        example: true
                      sorting:
                        type: boolean
                        example: true
                      search:
                        type: boolean
                        example: true
        '500':
          $ref: '#/components/responses/InternalError'

  /health:
    get:
      summary: Health Check
      description: Simple health check endpoint for monitoring
      operationId: getHealth
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          headers:
            Cache-Control:
              description: Caching policy
              schema:
                type: string
                example: "no-cache"
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - timestamp
                  - version
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-09-14T15:30:00Z"
                  version:
                    type: string
                    example: "1.0.0"
                  uptime_seconds:
                    type: number
                    example: 3600
                  checks:
                    type: object
                    properties:
                      storage:
                        type: string
                        enum: [ok, error]
                      ai_services:
                        type: string
                        enum: [ok, error]
        '503':
          description: Service is unhealthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "unhealthy"
                  timestamp:
                    type: string
                    format: date-time
                  errors:
                    type: array
                    items:
                      type: string

  /api/v1/status:
    get:
      summary: System Status
      description: Get comprehensive system status including services and configuration
      operationId: getSystemStatus
      tags:
        - System
      responses:
        '200':
          description: System status information
          headers:
            ETag:
              description: Entity tag for caching
              schema:
                type: string
            Cache-Control:
              description: Caching policy
              schema:
                type: string
                example: "public, max-age=30"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          system:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "PersonalManager"
                              version:
                                type: string
                                example: "1.0.0"
                              status:
                                type: string
                                enum: [running, stopped, error]
                              uptime:
                                type: number
                                description: Uptime in seconds
                              build_info:
                                type: object
                                properties:
                                  commit_hash:
                                    type: string
                                  build_date:
                                    type: string
                                    format: date-time
                          services:
                            type: object
                            properties:
                              storage:
                                type: object
                                properties:
                                  status:
                                    type: string
                                    enum: [available, unavailable]
                                  location:
                                    type: string
                                  size_mb:
                                    type: number
                                  last_backup:
                                    type: string
                                    format: date-time
                              ai:
                                type: object
                                properties:
                                  claude:
                                    $ref: '#/components/schemas/AIServiceStatus'
                                  gemini:
                                    $ref: '#/components/schemas/AIServiceStatus'
                          endpoints:
                            type: object
                            properties:
                              available:
                                type: array
                                items:
                                  type: string
                              read_only:
                                type: boolean
                              authentication:
                                type: string
                              rate_limit:
                                type: object
                                properties:
                                  requests_per_minute:
                                    type: integer
                                  burst_limit:
                                    type: integer
        '304':
          description: Not modified (when using ETag)
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/tasks:
    get:
      summary: List Tasks
      description: |
        Get paginated list of tasks with comprehensive filtering, sorting and search capabilities.
        Supports both offset-based and cursor-based pagination for optimal performance.
      operationId: getTasks
      tags:
        - Tasks
      parameters:
        # Filtering parameters
        - name: status
          in: query
          description: Filter tasks by status
          required: false
          schema:
            type: string
            enum: [inbox, next_action, project, waiting_for, someday_maybe, reference, completed, deleted]
        - name: priority
          in: query
          description: Filter tasks by priority
          required: false
          schema:
            type: string
            enum: [high, medium, low]
        - name: context
          in: query
          description: Filter tasks by context
          required: false
          schema:
            type: string
        - name: project_id
          in: query
          description: Filter tasks by project ID
          required: false
          schema:
            type: string
            example: "project-001"
        - name: tags
          in: query
          description: Filter tasks by tags (comma-separated)
          required: false
          schema:
            type: string
            example: "api,development,sprint-3"
        # Pagination parameters
        - name: page
          in: query
          description: Page number (1-based) for offset pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
            example: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            example: 20
        - name: cursor
          in: query
          description: Cursor for cursor-based pagination (alternative to page/limit)
          required: false
          schema:
            type: string
            format: base64
            example: "eyJpZCI6InRhc2stMTIzIiwidXBkYXRlZF9hdCI6IjIwMjUtMDktMTRUMTU6MzA6MDBaIn0="
        # Sorting parameters
        - name: sort_by
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum: [created_at, updated_at, priority, status, title, due_date]
            default: created_at
        - name: sort_order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        # Field selection
        - name: fields
          in: query
          description: Comma-separated list of fields to include (partial response)
          required: false
          schema:
            type: string
            example: "id,title,status,priority"
        # Search
        - name: search
          in: query
          description: Search tasks by title and description (full-text search)
          required: false
          schema:
            type: string
            minLength: 2
            example: "API documentation"
        # Date range filtering
        - name: created_after
          in: query
          description: Filter tasks created after this date (ISO-8601)
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-09-01T00:00:00Z"
        - name: created_before
          in: query
          description: Filter tasks created before this date (ISO-8601)
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-09-30T23:59:59Z"
        - name: updated_after
          in: query
          description: Filter tasks updated after this date (ISO-8601)
          required: false
          schema:
            type: string
            format: date-time
        - name: due_after
          in: query
          description: Filter tasks due after this date (ISO-8601)
          required: false
          schema:
            type: string
            format: date-time
        - name: due_before
          in: query
          description: Filter tasks due before this date (ISO-8601)
          required: false
          schema:
            type: string
            format: date-time
        # Include related data
        - name: include
          in: query
          description: Include related objects (comma-separated)
          required: false
          schema:
            type: string
            enum: [project, tags, comments]
            example: "project,tags"
      responses:
        '200':
          description: List of tasks with pagination and filtering info
          headers:
            ETag:
              description: Entity tag for caching
              schema:
                type: string
            Cache-Control:
              description: Caching policy
              schema:
                type: string
                example: "public, max-age=60"
            X-Total-Count:
              description: Total number of tasks (without pagination)
              schema:
                type: integer
            X-Page-Count:
              description: Total number of pages
              schema:
                type: integer
            X-Rate-Limit-Remaining:
              description: Number of requests remaining in current window
              schema:
                type: integer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          tasks:
                            type: array
                            items:
                              $ref: '#/components/schemas/Task'
                          summary:
                            $ref: '#/components/schemas/TaskSummary'
                          pagination:
                            $ref: '#/components/schemas/PaginationInfo'
                          filters_applied:
                            type: object
                            properties:
                              status:
                                type: string
                                nullable: true
                              priority:
                                type: string
                                nullable: true
                              context:
                                type: string
                                nullable: true
                              project_id:
                                type: string
                                nullable: true
                              search:
                                type: string
                                nullable: true
                              created_after:
                                type: string
                                format: date-time
                                nullable: true
                              created_before:
                                type: string
                                format: date-time
                                nullable: true
                              tags:
                                type: array
                                items:
                                  type: string
                          sorting:
                            type: object
                            properties:
                              sort_by:
                                type: string
                                example: "created_at"
                              sort_order:
                                type: string
                                example: "desc"
                          performance:
                            type: object
                            properties:
                              query_time_ms:
                                type: number
                                example: 23.5
                              total_scanned:
                                type: integer
                                example: 1500
                              cache_hit:
                                type: boolean
                                example: false
        '304':
          description: Not modified (when using ETag)
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/projects:
    get:
      summary: List Projects
      description: |
        Get paginated list of projects with filtering and sorting capabilities.
        Includes project health metrics and task summaries.
      operationId: getProjects
      tags:
        - Projects
      parameters:
        # Filtering parameters
        - name: status
          in: query
          description: Filter projects by status
          required: false
          schema:
            type: string
            enum: [active, completed, planning, on_hold, cancelled]
        - name: priority
          in: query
          description: Filter projects by priority
          required: false
          schema:
            type: string
            enum: [high, medium, low]
        - name: health
          in: query
          description: Filter projects by health status
          required: false
          schema:
            type: string
            enum: [excellent, good, warning, critical, unknown]
        - name: owner
          in: query
          description: Filter projects by owner
          required: false
          schema:
            type: string
            example: "development-team"
        - name: tags
          in: query
          description: Filter projects by tags (comma-separated)
          required: false
          schema:
            type: string
            example: "api,sprint-3"
        # Pagination parameters
        - name: page
          in: query
          description: Page number (1-based)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        # Sorting parameters
        - name: sort_by
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum: [created_at, updated_at, priority, status, name, progress, health]
            default: created_at
        - name: sort_order
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
        # Field selection
        - name: fields
          in: query
          description: Comma-separated list of fields to include
          required: false
          schema:
            type: string
            example: "id,name,status,priority,progress"
        # Progress filtering
        - name: progress_min
          in: query
          description: Filter projects with progress >= value
          required: false
          schema:
            type: number
            minimum: 0
            maximum: 100
            example: 50
        - name: progress_max
          in: query
          description: Filter projects with progress <= value
          required: false
          schema:
            type: number
            minimum: 0
            maximum: 100
            example: 90
        # Date filtering
        - name: due_after
          in: query
          description: Filter projects due after this date
          required: false
          schema:
            type: string
            format: date-time
        - name: due_before
          in: query
          description: Filter projects due before this date
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of projects
          headers:
            ETag:
              schema:
                type: string
            Cache-Control:
              schema:
                type: string
                example: "public, max-age=120"
            X-Total-Count:
              schema:
                type: integer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          projects:
                            type: array
                            items:
                              $ref: '#/components/schemas/Project'
                          summary:
                            $ref: '#/components/schemas/ProjectSummary'
                          pagination:
                            $ref: '#/components/schemas/PaginationInfo'
                          filters_applied:
                            type: object
                            properties:
                              status:
                                type: string
                                nullable: true
                              priority:
                                type: string
                                nullable: true
                              health:
                                type: string
                                nullable: true
                              owner:
                                type: string
                                nullable: true
                              progress_min:
                                type: number
                                nullable: true
                              progress_max:
                                type: number
                                nullable: true
                          sorting:
                            type: object
                            properties:
                              sort_by:
                                type: string
                                example: "created_at"
                              sort_order:
                                type: string
                                example: "desc"
        '304':
          description: Not modified
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/reports/{type}:
    get:
      summary: Get Report
      description: |
        Retrieve specific type of report with customizable parameters.
        Reports can be generated for different time periods and formats.
      operationId: getReport
      tags:
        - Reports
      parameters:
        - name: type
          in: path
          description: Type of report to retrieve
          required: true
          schema:
            type: string
            enum: [status, progress, performance, summary]
        # Report parameters
        - name: period
          in: query
          description: Report time period
          required: false
          schema:
            type: string
            enum: [daily, weekly, monthly, quarterly, yearly, all_time, custom]
            default: weekly
        - name: format
          in: query
          description: Report output format
          required: false
          schema:
            type: string
            enum: [json, summary, detailed]
            default: json
        - name: date_from
          in: query
          description: Start date for custom period (ISO-8601)
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-09-01T00:00:00Z"
        - name: date_to
          in: query
          description: End date for custom period (ISO-8601)
          required: false
          schema:
            type: string
            format: date-time
            example: "2025-09-14T23:59:59Z"
        - name: timezone
          in: query
          description: Timezone for date calculations
          required: false
          schema:
            type: string
            default: "UTC"
            example: "America/New_York"
        - name: include_charts
          in: query
          description: Include chart data in response
          required: false
          schema:
            type: boolean
            default: false
        - name: granularity
          in: query
          description: Data granularity for time-series data
          required: false
          schema:
            type: string
            enum: [hour, day, week, month]
            default: day
      responses:
        '200':
          description: Report data
          headers:
            ETag:
              schema:
                type: string
            Cache-Control:
              schema:
                type: string
                example: "public, max-age=300"
            Content-Disposition:
              description: For downloadable reports
              schema:
                type: string
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          report:
                            $ref: '#/components/schemas/Report'
                          metadata:
                            type: object
                            properties:
                              requested_type:
                                type: string
                              available_types:
                                type: array
                                items:
                                  type: string
                              generation_time_ms:
                                type: number
                              data_freshness:
                                type: string
                                format: date-time
                              cache_status:
                                type: string
                                enum: [hit, miss, stale]
        '304':
          description: Not modified
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/metrics:
    get:
      summary: System Metrics
      description: |
        Get system performance metrics and statistics.
        Supports different output formats including Prometheus-compatible.
      operationId: getMetrics
      tags:
        - Metrics
      parameters:
        - name: include
          in: query
          description: Comma-separated list of metric categories to include
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [system, api, application]
            default: [system, api, application]
          style: form
          explode: false
        - name: format
          in: query
          description: Response format
          required: false
          schema:
            type: string
            enum: [json, prometheus, influx]
            default: json
        - name: window
          in: query
          description: Time window for aggregated metrics
          required: false
          schema:
            type: string
            enum: [1m, 5m, 15m, 1h, 24h]
            default: 5m
        - name: resolution
          in: query
          description: Data point resolution for time-series metrics
          required: false
          schema:
            type: string
            enum: [raw, 1s, 10s, 1m, 5m]
            default: 10s
      responses:
        '200':
          description: System metrics
          headers:
            Cache-Control:
              schema:
                type: string
                example: "public, max-age=10"
            X-Metrics-Timestamp:
              description: Metrics collection timestamp
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          system_metrics:
                            $ref: '#/components/schemas/SystemMetrics'
                          api_metrics:
                            $ref: '#/components/schemas/APIMetrics'
                          application_metrics:
                            $ref: '#/components/schemas/ApplicationMetrics'
                          collection_info:
                            type: object
                            properties:
                              collected_at:
                                type: string
                                format: date-time
                              window:
                                type: string
                              resolution:
                                type: string
                              data_points:
                                type: integer
            text/plain:
              schema:
                type: string
                description: Prometheus-formatted metrics
                example: |
                  # HELP pm_api_requests_total Total number of API requests
                  # TYPE pm_api_requests_total counter
                  pm_api_requests_total{endpoint="/api/v1/tasks"} 142
                  pm_api_requests_total{endpoint="/api/v1/projects"} 87
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    APIResponse:
      type: object
      description: Standard API response format following PersonalManager JSON protocol
      required:
        - status
        - command
        - timestamp
        - data
        - error
        - metadata
      properties:
        status:
          type: string
          enum: [success, failed, warning]
          description: Response status indicating success or failure
          example: success
        command:
          type: string
          description: Command or operation identifier
          example: "api.tasks"
          pattern: "^[a-z]+\\.[a-z_]+$"
        timestamp:
          type: string
          format: date-time
          description: Response timestamp in ISO-8601 format
          example: "2025-09-14T15:30:00Z"
        data:
          oneOf:
            - type: object
            - type: 'null'
          description: Response data or null on error
        error:
          oneOf:
            - $ref: '#/components/schemas/APIError'
            - type: 'null'
          description: Error information or null on success
        metadata:
          type: object
          required:
            - version
            - execution_time
          properties:
            version:
              type: string
              example: "1.0.0"
              pattern: "^\\d+\\.\\d+\\.\\d+$"
            execution_time:
              type: number
              description: Execution time in seconds
              minimum: 0
              example: 0.045
            request_id:
              type: string
              format: uuid
              description: Unique request identifier for tracking
            rate_limit:
              type: object
              properties:
                remaining:
                  type: integer
                  description: Requests remaining in current window
                reset_at:
                  type: string
                  format: date-time
                  description: When rate limit window resets

    APIError:
      type: object
      required:
        - code
        - message
        - details
      properties:
        code:
          type: string
          enum:
            # Client errors (4xx)
            - BAD_REQUEST
            - INVALID_INPUT
            - INVALID_PARAMETER
            - MISSING_PARAMETER
            - INVALID_FORMAT
            - INVALID_DATE_RANGE
            - INVALID_PAGINATION
            - INVALID_SORT_FIELD
            - INVALID_FILTER_VALUE
            - FIELD_NOT_SELECTABLE
            # Authentication/Authorization (4xx)
            - UNAUTHORIZED
            - FORBIDDEN
            - API_KEY_MISSING
            - API_KEY_INVALID
            - TOKEN_EXPIRED
            - PERMISSION_DENIED
            - RATE_LIMITED
            # Not Found (4xx)
            - NOT_FOUND
            - ENDPOINT_NOT_FOUND
            - RESOURCE_NOT_FOUND
            - REPORT_TYPE_NOT_FOUND
            # Conflict/Validation (4xx)
            - CONFLICT
            - VALIDATION_FAILED
            - UNPROCESSABLE_ENTITY
            - INVALID_REPORT_TYPE
            - UNSUPPORTED_FORMAT
            - UNSUPPORTED_OPERATION
            # Server errors (5xx)
            - INTERNAL_ERROR
            - SERVICE_UNAVAILABLE
            - TIMEOUT
            - DATABASE_ERROR
            - STORAGE_ERROR
            - NETWORK_ERROR
            - AI_SERVICE_ERROR
            - CONFIGURATION_ERROR
            - DEPENDENCY_ERROR
          description: Machine-readable error code
        message:
          type: string
          description: Human-readable error message
          example: "Invalid input parameters"
          minLength: 1
          maxLength: 500
        details:
          type: object
          description: Additional error context and debugging information
          properties:
            field:
              type: string
              description: Field that caused the error
            value:
              description: Invalid value that was provided
            expected:
              description: Expected value or format
            validation_errors:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  code:
                    type: string
                  message:
                    type: string
            suggestion:
              type: string
              description: Suggested fix for the error
            documentation_url:
              type: string
              format: uri
              description: Link to relevant documentation
        request_id:
          type: string
          format: uuid
          description: Request ID for error tracking

    PaginationInfo:
      type: object
      description: Pagination metadata for list endpoints
      required:
        - page
        - limit
        - total
        - total_pages
        - has_next
        - has_previous
      properties:
        page:
          type: integer
          minimum: 1
          description: Current page number (1-based)
          example: 2
        limit:
          type: integer
          minimum: 1
          maximum: 100
          description: Items per page
          example: 20
        total:
          type: integer
          minimum: 0
          description: Total number of items across all pages
          example: 156
        total_pages:
          type: integer
          minimum: 0
          description: Total number of pages
          example: 8
        has_next:
          type: boolean
          description: Whether there is a next page
          example: true
        has_previous:
          type: boolean
          description: Whether there is a previous page
          example: true
        next_cursor:
          type: string
          nullable: true
          description: Cursor for next page (cursor-based pagination)
          example: "eyJpZCI6InRhc2stMTU2In0="
        previous_cursor:
          type: string
          nullable: true
          description: Cursor for previous page (cursor-based pagination)
          example: "eyJpZCI6InRhc2stMTIwIn0="
        links:
          type: object
          description: Navigation links
          properties:
            first:
              type: string
              format: uri
              example: "/api/v1/tasks?page=1&limit=20"
            last:
              type: string
              format: uri
              example: "/api/v1/tasks?page=8&limit=20"
            next:
              type: string
              format: uri
              nullable: true
              example: "/api/v1/tasks?page=3&limit=20"
            previous:
              type: string
              format: uri
              nullable: true
              example: "/api/v1/tasks?page=1&limit=20"

    Task:
      type: object
      required:
        - id
        - title
        - status
        - priority
        - context
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: Unique task identifier
          example: "task-001"
          pattern: "^task-[a-zA-Z0-9]+$"
        title:
          type: string
          description: Task title
          example: "Complete API documentation"
          minLength: 1
          maxLength: 500
        description:
          type: string
          description: Detailed task description
          nullable: true
          maxLength: 5000
        status:
          type: string
          enum: [inbox, next_action, project, waiting_for, someday_maybe, reference, completed, deleted]
          description: Current task status based on GTD methodology
        priority:
          type: string
          enum: [high, medium, low]
          description: Task priority level
        context:
          type: string
          description: Task context or category for organization
          example: "development"
          minLength: 1
          maxLength: 100
        created_at:
          type: string
          format: date-time
          description: Task creation timestamp in ISO-8601 format
          example: "2025-09-14T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Task last update timestamp in ISO-8601 format
          example: "2025-09-14T15:30:00Z"
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Task due date in ISO-8601 format
          example: "2025-09-15T18:00:00Z"
        tags:
          type: array
          items:
            type: string
          description: Task tags for categorization
          example: ["api", "development", "sprint-3"]
        project_id:
          type: string
          nullable: true
          description: Associated project ID
          example: "project-001"
          pattern: "^project-[a-zA-Z0-9]+$"
        estimated_hours:
          type: number
          nullable: true
          minimum: 0
          description: Estimated hours to complete
          example: 4.5
        actual_hours:
          type: number
          nullable: true
          minimum: 0
          description: Actual hours spent
          example: 3.2
        assignee:
          type: string
          nullable: true
          description: Task assignee
        url:
          type: string
          format: uri
          nullable: true
          description: Related URL or reference
        notes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              content:
                type: string
              created_at:
                type: string
                format: date-time
          description: Task notes and comments

    TaskSummary:
      type: object
      description: Summary statistics for tasks
      properties:
        total:
          type: integer
          description: Total number of tasks
          minimum: 0
          example: 45
        by_status:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
          description: Task count by status
          example:
            inbox: 12
            next_action: 15
            project: 8
            completed: 10
        by_priority:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
          description: Task count by priority
          example:
            high: 8
            medium: 22
            low: 15
        by_context:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
          description: Task count by context
          example:
            development: 20
            documentation: 12
            planning: 8
            review: 5
        overdue_count:
          type: integer
          minimum: 0
          description: Number of overdue tasks
          example: 3
        due_today_count:
          type: integer
          minimum: 0
          description: Number of tasks due today
          example: 5
        completion_rate:
          type: number
          minimum: 0
          maximum: 100
          description: Percentage of completed tasks
          example: 68.5

    Project:
      type: object
      required:
        - id
        - name
        - status
        - priority
        - health
        - progress
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: Unique project identifier
          example: "project-001"
          pattern: "^project-[a-zA-Z0-9]+$"
        name:
          type: string
          description: Project name
          example: "API Development"
          minLength: 1
          maxLength: 200
        description:
          type: string
          description: Project description
          nullable: true
          maxLength: 2000
        status:
          type: string
          enum: [active, completed, planning, on_hold, cancelled]
          description: Project status
        priority:
          type: string
          enum: [high, medium, low]
          description: Project priority
        health:
          type: string
          enum: [excellent, good, warning, critical, unknown]
          description: Project health status based on various metrics
        progress:
          type: number
          minimum: 0
          maximum: 100
          description: Project completion percentage
          example: 75.5
        created_at:
          type: string
          format: date-time
          description: Project creation timestamp
          example: "2025-09-10T09:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Project last update timestamp
          example: "2025-09-14T15:30:00Z"
        due_date:
          type: string
          format: date-time
          nullable: true
          description: Project due date
          example: "2025-09-30T23:59:59Z"
        start_date:
          type: string
          format: date-time
          nullable: true
          description: Project start date
          example: "2025-09-01T00:00:00Z"
        tags:
          type: array
          items:
            type: string
          description: Project tags
          example: ["api", "development", "sprint-3"]
        task_count:
          type: integer
          minimum: 0
          description: Total tasks in project
          example: 15
        completed_tasks:
          type: integer
          minimum: 0
          description: Completed tasks in project
          example: 8
        active_tasks:
          type: integer
          minimum: 0
          description: Active tasks in project
          example: 5
        blocked_tasks:
          type: integer
          minimum: 0
          description: Blocked tasks in project
          example: 2
        owner:
          type: string
          description: Project owner or team
          example: "development-team"
        budget:
          type: object
          nullable: true
          properties:
            allocated:
              type: number
              minimum: 0
            spent:
              type: number
              minimum: 0
            currency:
              type: string
              example: "USD"
        milestones:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              due_date:
                type: string
                format: date-time
              completed:
                type: boolean
              progress:
                type: number
                minimum: 0
                maximum: 100

    ProjectSummary:
      type: object
      description: Summary statistics for projects
      properties:
        total:
          type: integer
          description: Total number of projects
          minimum: 0
          example: 12
        active:
          type: integer
          description: Number of active projects
          minimum: 0
          example: 7
        completed:
          type: integer
          description: Number of completed projects
          minimum: 0
          example: 3
        planning:
          type: integer
          description: Number of projects in planning
          minimum: 0
          example: 2
        on_hold:
          type: integer
          description: Number of projects on hold
          minimum: 0
          example: 0
        cancelled:
          type: integer
          description: Number of cancelled projects
          minimum: 0
          example: 0
        average_progress:
          type: number
          minimum: 0
          maximum: 100
          description: Average completion percentage
          example: 65.3
        health_distribution:
          type: object
          properties:
            excellent:
              type: integer
              minimum: 0
            good:
              type: integer
              minimum: 0
            warning:
              type: integer
              minimum: 0
            critical:
              type: integer
              minimum: 0
            unknown:
              type: integer
              minimum: 0
        overdue_projects:
          type: integer
          minimum: 0
          description: Number of overdue projects
          example: 1

    Report:
      type: object
      required:
        - report_type
        - generated_at
        - period
        - data
      properties:
        report_type:
          type: string
          enum: [status, progress, performance, summary]
          description: Type of report
        generated_at:
          type: string
          format: date-time
          description: Report generation timestamp
          example: "2025-09-14T15:30:00Z"
        period:
          type: string
          description: Report time period
          example: "weekly"
        period_start:
          type: string
          format: date-time
          description: Start of reporting period
        period_end:
          type: string
          format: date-time
          description: End of reporting period
        data:
          type: object
          description: Report-specific data structure
          additionalProperties: true
        charts:
          type: array
          nullable: true
          description: Chart data for visualization
          items:
            type: object
            properties:
              type:
                type: string
                enum: [line, bar, pie, area]
              title:
                type: string
              data:
                type: object
              config:
                type: object
        insights:
          type: array
          nullable: true
          description: AI-generated insights
          items:
            type: object
            properties:
              type:
                type: string
                enum: [trend, anomaly, recommendation]
              title:
                type: string
              description:
                type: string
              confidence:
                type: number
                minimum: 0
                maximum: 1
        export_formats:
          type: array
          items:
            type: string
            enum: [json, csv, pdf, xlsx]
          description: Available export formats

    AIServiceStatus:
      type: object
      required:
        - configured
        - status
      properties:
        configured:
          type: boolean
          description: Whether service is configured
          example: true
        status:
          type: string
          enum: [configured, not_configured, error, degraded]
          description: Service status
          example: "configured"
        last_used:
          type: string
          format: date-time
          nullable: true
          description: Last time service was used
        usage_count:
          type: integer
          minimum: 0
          description: Total usage count
        error_rate:
          type: number
          minimum: 0
          maximum: 1
          description: Recent error rate percentage
        avg_response_time:
          type: number
          minimum: 0
          description: Average response time in milliseconds

    SystemMetrics:
      type: object
      description: System-level performance metrics
      properties:
        timestamp:
          type: string
          format: date-time
          description: Metrics collection timestamp
        cpu:
          type: object
          properties:
            usage_percent:
              type: number
              minimum: 0
              maximum: 100
              description: CPU usage percentage
              example: 45.2
            load_average:
              type: object
              properties:
                "1m":
                  type: number
                "5m":
                  type: number
                "15m":
                  type: number
            cores:
              type: integer
              minimum: 1
              description: Number of CPU cores
        memory:
          type: object
          properties:
            usage_percent:
              type: number
              minimum: 0
              maximum: 100
              description: Memory usage percentage
              example: 62.8
            available_mb:
              type: number
              minimum: 0
              description: Available memory in MB
              example: 2048.5
            total_mb:
              type: number
              minimum: 0
              description: Total memory in MB
            swap_usage_percent:
              type: number
              minimum: 0
              maximum: 100
        disk:
          type: object
          properties:
            usage_percent:
              type: number
              minimum: 0
              maximum: 100
              description: Disk usage percentage
              example: 23.4
            available_gb:
              type: number
              minimum: 0
              description: Available disk space in GB
              example: 125.7
            total_gb:
              type: number
              minimum: 0
              description: Total disk space in GB
            io_read_mb_per_sec:
              type: number
              minimum: 0
              description: Disk read throughput in MB/s
            io_write_mb_per_sec:
              type: number
              minimum: 0
              description: Disk write throughput in MB/s
        platform:
          type: string
          description: Operating system platform
          example: "Darwin"
        python_version:
          type: string
          description: Python version
          example: "3.11.5"
        uptime_seconds:
          type: number
          minimum: 0
          description: System uptime in seconds

    APIMetrics:
      type: object
      description: API server performance metrics
      properties:
        uptime_seconds:
          type: number
          minimum: 0
          description: API server uptime in seconds
          example: 86400
        requests_served:
          type: integer
          minimum: 0
          description: Total requests served since startup
          example: 15847
        endpoints_available:
          type: integer
          minimum: 0
          description: Number of available endpoints
          example: 7
        response_times:
          type: object
          properties:
            avg_ms:
              type: number
              minimum: 0
              description: Average response time in milliseconds
              example: 45.2
            p50_ms:
              type: number
              minimum: 0
              description: 50th percentile response time
              example: 32.1
            p95_ms:
              type: number
              minimum: 0
              description: 95th percentile response time
              example: 156.7
            p99_ms:
              type: number
              minimum: 0
              description: 99th percentile response time
              example: 284.3
        requests_by_endpoint:
          type: object
          additionalProperties:
            type: integer
            minimum: 0
          example:
            "/api/v1/tasks": 5847
            "/api/v1/projects": 3421
            "/api/v1/reports/status": 1205
        error_rates:
          type: object
          properties:
            "4xx_rate":
              type: number
              minimum: 0
              maximum: 1
              description: 4xx error rate percentage
            "5xx_rate":
              type: number
              minimum: 0
              maximum: 1
              description: 5xx error rate percentage
        rate_limiting:
          type: object
          properties:
            requests_blocked:
              type: integer
              minimum: 0
              description: Number of requests blocked by rate limiting
            active_limits:
              type: integer
              minimum: 0
              description: Number of clients currently rate limited

    ApplicationMetrics:
      type: object
      description: Application-specific metrics
      properties:
        data_metrics:
          type: object
          properties:
            tasks_in_system:
              type: integer
              minimum: 0
              description: Total tasks in system
              example: 156
            projects_in_system:
              type: integer
              minimum: 0
              description: Total projects in system
              example: 12
            active_tasks:
              type: integer
              minimum: 0
              description: Currently active tasks
            completed_tasks_today:
              type: integer
              minimum: 0
              description: Tasks completed today
        storage:
          type: object
          properties:
            size_mb:
              type: number
              minimum: 0
              description: Total storage size in MB
              example: 245.8
            growth_rate_mb_per_day:
              type: number
              description: Storage growth rate in MB per day
            backup_status:
              type: string
              enum: [up_to_date, pending, failed, never]
            last_backup:
              type: string
              format: date-time
              nullable: true
              description: Last backup timestamp
            data_integrity_status:
              type: string
              enum: [good, warning, error]
              description: Data integrity status
        ai_usage:
          type: object
          properties:
            total_queries:
              type: integer
              minimum: 0
              description: Total AI queries made
            queries_today:
              type: integer
              minimum: 0
              description: AI queries made today
            success_rate:
              type: number
              minimum: 0
              maximum: 1
              description: AI query success rate
            avg_response_time_ms:
              type: number
              minimum: 0
              description: Average AI response time

  responses:
    BadRequest:
      description: Bad Request - Invalid input parameters or malformed request
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/APIResponse'
              - type: object
                properties:
                  status:
                    example: "failed"
                  error:
                    type: object
                    properties:
                      code:
                        example: "BAD_REQUEST"
                      message:
                        example: "Invalid input parameters"
                      details:
                        type: object
                        properties:
                          invalid_parameters:
                            type: array
                            items:
                              type: string
                            example: ["sort_by", "limit"]
          examples:
            invalid_parameter:
              summary: Invalid parameter value
              value:
                status: "failed"
                command: "api.tasks"
                timestamp: "2025-09-14T15:30:00Z"
                data: null
                error:
                  code: "INVALID_PARAMETER"
                  message: "Invalid value for parameter 'sort_by'"
                  details:
                    field: "sort_by"
                    value: "invalid_field"
                    expected: "one of: created_at, updated_at, priority, status, title, due_date"
                metadata:
                  version: "1.0.0"
                  execution_time: 0.002

    UnprocessableEntity:
      description: Unprocessable Entity - Request is well-formed but contains semantic errors
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/APIResponse'
              - type: object
                properties:
                  status:
                    example: "failed"
                  error:
                    type: object
                    properties:
                      code:
                        example: "UNPROCESSABLE_ENTITY"
                      message:
                        example: "Unable to process the request due to semantic errors"

    NotFound:
      description: Resource Not Found
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/APIResponse'
              - type: object
                properties:
                  status:
                    example: "failed"
                  error:
                    type: object
                    properties:
                      code:
                        example: "NOT_FOUND"
                      message:
                        example: "Resource not found"
                      details:
                        type: object
                        properties:
                          resource_type:
                            type: string
                            example: "report"
                          resource_id:
                            type: string
                            example: "invalid_type"

    TooManyRequests:
      description: Too Many Requests - Rate limit exceeded
      headers:
        X-RateLimit-Limit:
          description: Request limit per window
          schema:
            type: integer
            example: 1000
        X-RateLimit-Remaining:
          description: Requests remaining in current window
          schema:
            type: integer
            example: 0
        X-RateLimit-Reset:
          description: Time when rate limit window resets
          schema:
            type: string
            format: date-time
        Retry-After:
          description: Seconds to wait before retrying
          schema:
            type: integer
            example: 60
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/APIResponse'
              - type: object
                properties:
                  status:
                    example: "failed"
                  error:
                    type: object
                    properties:
                      code:
                        example: "RATE_LIMITED"
                      message:
                        example: "Rate limit exceeded. Try again in 60 seconds."
                      details:
                        type: object
                        properties:
                          limit:
                            type: integer
                            example: 1000
                          window:
                            type: string
                            example: "1 minute"
                          retry_after_seconds:
                            type: integer
                            example: 60

    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/APIResponse'
              - type: object
                properties:
                  status:
                    example: "failed"
                  error:
                    type: object
                    properties:
                      code:
                        example: "INTERNAL_ERROR"
                      message:
                        example: "Internal server error occurred"
                      details:
                        type: object
                        properties:
                          request_id:
                            type: string
                            format: uuid
                          support_contact:
                            type: string
                            example: "Please contact support with request ID"

  parameters:
    PageParam:
      name: page
      in: query
      description: Page number (1-based)
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1

    LimitParam:
      name: limit
      in: query
      description: Number of items per page
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20

    SortOrderParam:
      name: sort_order
      in: query
      description: Sort order
      required: false
      schema:
        type: string
        enum: [asc, desc]
        default: desc

    FieldsParam:
      name: fields
      in: query
      description: Comma-separated list of fields to include
      required: false
      schema:
        type: string

  headers:
    ETag:
      description: Entity tag for caching
      schema:
        type: string
        example: '"33a64df551425fcc55e4d42a148795d9f25f89d4"'

    CacheControl:
      description: Caching directives
      schema:
        type: string
        example: "public, max-age=300"

    RateLimitRemaining:
      description: Number of requests remaining in current window
      schema:
        type: integer
        example: 945

    RateLimitReset:
      description: Time when rate limit window resets
      schema:
        type: string
        format: date-time

tags:
  - name: Info
    description: API information and documentation endpoints
    externalDocs:
      description: API documentation
      url: https://github.com/personalmanager/api-docs
  - name: Health
    description: Health check and monitoring endpoints
  - name: System
    description: System status and configuration information
  - name: Tasks
    description: Task management operations (read-only access)
  - name: Projects
    description: Project management operations (read-only access)
  - name: Reports
    description: Report generation and retrieval
  - name: Metrics
    description: System performance and usage metrics

externalDocs:
  description: PersonalManager Documentation
  url: https://github.com/personalmanager/docs

x-tagGroups:
  - name: Core API
    tags:
      - Info
      - Health
      - System
  - name: Data Access
    tags:
      - Tasks
      - Projects
  - name: Analytics
    tags:
      - Reports
      - Metrics

x-response-time-targets:
  p50: 100  # milliseconds
  p95: 500  # milliseconds

x-changelog:
  "1.0.0":
    date: "2025-09-14"
    changes:
      - "GA release with comprehensive pagination, filtering, and sorting"
      - "Standardized error codes and response formats"
      - "Added rate limiting and caching support"
      - "Enhanced metrics and monitoring capabilities"
      - "Frozen API with backward compatibility guarantee"

x-deprecation-policy:
  notice_period_days: 90
  removal_period_days: 365
  notification_methods:
    - "x-deprecated header in responses"
    - "deprecation notices in documentation"
    - "changelog updates"