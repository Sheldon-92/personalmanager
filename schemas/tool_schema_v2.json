{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://personalmanager.ai/schemas/tools/v2.0.0",
  "title": "PersonalManager Tool Specification v2.0",
  "description": "JSON Schema for Tool Definition and Response formats in PersonalManager v2.0",
  "version": "2.0.0",

  "definitions": {
    "ToolResponse": {
      "type": "object",
      "description": "Standard response format for all v2 tools",
      "required": ["status", "command", "metadata"],
      "properties": {
        "status": {
          "type": "string",
          "enum": ["success", "failed", "error"],
          "description": "Overall response status"
        },
        "command": {
          "type": "string",
          "pattern": "^[a-z_]+\\.[a-z_]+$",
          "description": "Tool identifier in dot notation (e.g., 'habit.create')"
        },
        "data": {
          "description": "Tool-specific response data (null on error)"
        },
        "error": {
          "$ref": "#/definitions/ToolError"
        },
        "metadata": {
          "$ref": "#/definitions/ToolMetadata"
        }
      }
    },

    "ToolError": {
      "type": "object",
      "description": "Standardized error information",
      "required": ["code", "message"],
      "properties": {
        "code": {
          "$ref": "#/definitions/ToolErrorCode"
        },
        "message": {
          "type": "string",
          "minLength": 1,
          "description": "Human-readable error message"
        },
        "details": {
          "type": "object",
          "description": "Additional error context"
        },
        "recovery_suggestions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Actionable recovery steps"
        }
      }
    },

    "ToolErrorCode": {
      "type": "string",
      "enum": [
        "TOOL_INVALID_INPUT",
        "TOOL_MISSING_REQUIRED_FIELD",
        "TOOL_INVALID_FIELD_TYPE",
        "TOOL_INVALID_FIELD_VALUE",
        "TOOL_INPUT_TOO_LARGE",
        "TOOL_INSUFFICIENT_PERMISSIONS",
        "TOOL_ROLE_NOT_AUTHORIZED",
        "TOOL_CAPABILITY_MISSING",
        "TOOL_RESOURCE_ACCESS_DENIED",
        "TOOL_RATE_LIMIT_EXCEEDED",
        "TOOL_NOT_FOUND",
        "TOOL_DEPRECATED",
        "TOOL_TEMPORARILY_DISABLED",
        "TOOL_EXECUTION_TIMEOUT",
        "TOOL_RESOURCE_UNAVAILABLE",
        "TOOL_RESOURCE_NOT_FOUND",
        "TOOL_RESOURCE_ALREADY_EXISTS",
        "TOOL_DATA_CORRUPTION",
        "TOOL_STORAGE_ERROR",
        "TOOL_EXTERNAL_SERVICE_ERROR",
        "TOOL_API_KEY_INVALID",
        "TOOL_NETWORK_ERROR",
        "TOOL_INTERNAL_ERROR",
        "TOOL_CONFIGURATION_ERROR",
        "TOOL_DEPENDENCY_ERROR"
      ],
      "description": "Standardized error codes for tools"
    },

    "ToolMetadata": {
      "type": "object",
      "description": "Tool execution metadata",
      "required": ["version", "execution_time", "tool_info", "input_validation"],
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Tool spec version (semver)"
        },
        "execution_time": {
          "type": "number",
          "minimum": 0,
          "description": "Execution time in seconds"
        },
        "tool_info": {
          "type": "object",
          "required": ["name", "category", "permissions_used"],
          "properties": {
            "name": {
              "type": "string",
              "description": "Human-readable tool name"
            },
            "category": {
              "$ref": "#/definitions/ToolCategory"
            },
            "permissions_used": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Permissions actually used during execution"
            }
          }
        },
        "input_validation": {
          "type": "object",
          "required": ["schema_version", "validation_time"],
          "properties": {
            "schema_version": {
              "type": "string",
              "pattern": "^\\d+\\.\\d+\\.\\d+$",
              "description": "Input schema version used"
            },
            "validation_time": {
              "type": "number",
              "minimum": 0,
              "description": "Input validation time in milliseconds"
            }
          }
        }
      }
    },

    "ToolDefinition": {
      "type": "object",
      "description": "Complete tool definition for registration and discovery",
      "required": ["id", "name", "category", "version", "description", "function_signature", "permissions", "security_level", "implementation", "validation", "created_at", "updated_at"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z_]+\\.[a-z_]+$",
          "description": "Unique tool identifier"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "description": "Human-readable tool name"
        },
        "category": {
          "$ref": "#/definitions/ToolCategory"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Tool version (semver)"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 500,
          "description": "Brief tool description"
        },
        "detailed_description": {
          "type": "string",
          "maxLength": 2000,
          "description": "Extended description"
        },
        "function_signature": {
          "$ref": "#/definitions/FunctionSignature"
        },
        "permissions": {
          "$ref": "#/definitions/ToolPermissions"
        },
        "security_level": {
          "$ref": "#/definitions/SecurityLevel"
        },
        "implementation": {
          "$ref": "#/definitions/ToolImplementation"
        },
        "validation": {
          "$ref": "#/definitions/ValidationRules"
        },
        "author": {
          "type": "string",
          "description": "Tool author"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        },
        "deprecated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Deprecation timestamp if deprecated"
        },
        "replacement_tool": {
          "type": "string",
          "pattern": "^[a-z_]+\\.[a-z_]+$",
          "description": "Replacement tool if deprecated"
        }
      }
    },

    "ToolCategory": {
      "type": "string",
      "enum": [
        "habit_management",
        "project_management",
        "task_management",
        "time_management",
        "knowledge_management",
        "system_admin",
        "ai_explanation",
        "data_analysis",
        "integration",
        "custom"
      ],
      "description": "Tool categorization"
    },

    "SecurityLevel": {
      "type": "string",
      "enum": ["public", "internal", "confidential", "restricted"],
      "description": "Security classification"
    },

    "FunctionSignature": {
      "type": "object",
      "description": "Tool input/output specification",
      "required": ["input", "output"],
      "properties": {
        "input": {
          "type": "object",
          "required": ["schema", "examples", "required_fields"],
          "properties": {
            "schema": {
              "type": "object",
              "description": "JSON Schema for input validation"
            },
            "examples": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InputExample"
              },
              "minItems": 1,
              "description": "Example inputs"
            },
            "required_fields": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Required field names"
            }
          }
        },
        "output": {
          "type": "object",
          "required": ["success_schema", "examples"],
          "properties": {
            "success_schema": {
              "type": "object",
              "description": "Schema for successful responses"
            },
            "error_schemas": {
              "type": "object",
              "patternProperties": {
                "^TOOL_[A-Z_]+$": {
                  "type": "object",
                  "description": "Schema for specific error type"
                }
              },
              "description": "Schemas for error responses"
            },
            "examples": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutputExample"
              },
              "minItems": 1,
              "description": "Example outputs"
            }
          }
        },
        "side_effects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SideEffect"
          },
          "description": "Declared side effects"
        }
      }
    },

    "InputExample": {
      "type": "object",
      "required": ["name", "description", "input", "expected_output_type"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Example name"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "What this example demonstrates"
        },
        "input": {
          "description": "Example input data"
        },
        "expected_output_type": {
          "type": "string",
          "enum": ["success", "error"],
          "description": "Expected result type"
        }
      }
    },

    "OutputExample": {
      "type": "object",
      "required": ["name", "scenario", "response"],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Example name"
        },
        "scenario": {
          "type": "string",
          "minLength": 1,
          "description": "When this output occurs"
        },
        "response": {
          "$ref": "#/definitions/ToolResponse",
          "description": "Example response"
        }
      }
    },

    "SideEffect": {
      "type": "object",
      "required": ["type", "description", "reversible"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["read", "write", "delete", "network", "filesystem"],
          "description": "Type of side effect"
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "description": "What the side effect does"
        },
        "reversible": {
          "type": "boolean",
          "description": "Can this be undone"
        }
      }
    },

    "ToolPermissions": {
      "type": "object",
      "description": "Tool permission requirements",
      "required": ["required_roles", "required_capabilities", "resource_access"],
      "properties": {
        "required_roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "minItems": 1,
          "description": "Roles that can use this tool"
        },
        "required_capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "description": "Specific capabilities needed"
        },
        "resource_access": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceAccess"
          },
          "description": "Resource access patterns"
        }
      }
    },

    "Role": {
      "type": "string",
      "enum": ["user", "power_user", "admin", "developer", "ai_agent"],
      "description": "User roles"
    },

    "Capability": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z_]+\\.[a-z_]+$",
          "description": "Capability name (e.g., 'habit.write')"
        },
        "scope": {
          "type": "string",
          "description": "Scope restriction (e.g., 'self_only')"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityCondition"
          },
          "description": "When this capability applies"
        }
      }
    },

    "CapabilityCondition": {
      "type": "object",
      "required": ["type", "parameters"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["time_restriction", "rate_limit", "user_consent", "admin_approval"],
          "description": "Condition type"
        },
        "parameters": {
          "type": "object",
          "description": "Condition-specific parameters"
        }
      }
    },

    "ResourceAccess": {
      "type": "object",
      "required": ["resource_type", "access_mode"],
      "properties": {
        "resource_type": {
          "$ref": "#/definitions/ResourceType"
        },
        "access_mode": {
          "$ref": "#/definitions/AccessMode"
        },
        "scope_filter": {
          "type": "string",
          "description": "Scope limitations"
        }
      }
    },

    "ResourceType": {
      "type": "string",
      "enum": [
        "habit_data",
        "task_data",
        "project_data",
        "user_preferences",
        "system_config",
        "external_api",
        "filesystem"
      ],
      "description": "Resource types"
    },

    "AccessMode": {
      "type": "string",
      "enum": ["read", "write", "delete", "create", "update"],
      "description": "Access modes"
    },

    "ToolImplementation": {
      "type": "object",
      "required": ["type", "module", "function", "version_compatibility"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["function_call", "class_method", "script_execution", "external_api"],
          "description": "Implementation type"
        },
        "module": {
          "type": "string",
          "description": "Python module path"
        },
        "function": {
          "type": "string",
          "description": "Function name"
        },
        "class_name": {
          "type": "string",
          "description": "Class name if class_method"
        },
        "version_compatibility": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\d+\\.\\d+\\.\\d+$"
          },
          "description": "Compatible versions"
        }
      }
    },

    "ValidationRules": {
      "type": "object",
      "required": ["input_validation", "output_validation", "permission_check"],
      "properties": {
        "input_validation": {
          "type": "string",
          "enum": ["strict", "lenient", "disabled"],
          "description": "Input validation level"
        },
        "output_validation": {
          "type": "string",
          "enum": ["strict", "lenient", "disabled"],
          "description": "Output validation level"
        },
        "permission_check": {
          "type": "string",
          "enum": ["required", "advisory", "disabled"],
          "description": "Permission check level"
        },
        "rate_limiting": {
          "type": "object",
          "properties": {
            "max_calls_per_minute": {
              "type": "integer",
              "minimum": 1
            },
            "max_calls_per_hour": {
              "type": "integer",
              "minimum": 1
            },
            "max_calls_per_day": {
              "type": "integer",
              "minimum": 1
            }
          },
          "description": "Rate limiting configuration"
        }
      }
    },

    "ToolRegistry": {
      "type": "object",
      "description": "Complete tool registry",
      "required": ["version", "last_updated", "tools", "categories", "permissions"],
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Registry format version"
        },
        "last_updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last registry update"
        },
        "tools": {
          "type": "object",
          "patternProperties": {
            "^[a-z_]+\\.[a-z_]+$": {
              "$ref": "#/definitions/ToolDefinition"
            }
          },
          "description": "All registered tools"
        },
        "categories": {
          "type": "object",
          "patternProperties": {
            "^[a-z_]+$": {
              "$ref": "#/definitions/ToolCategoryInfo"
            }
          },
          "description": "Category metadata"
        },
        "permissions": {
          "$ref": "#/definitions/PermissionSchemeDefinition"
        }
      }
    },

    "ToolCategoryInfo": {
      "type": "object",
      "required": ["category", "name", "description", "tool_count"],
      "properties": {
        "category": {
          "$ref": "#/definitions/ToolCategory"
        },
        "name": {
          "type": "string",
          "description": "Human-readable name"
        },
        "description": {
          "type": "string",
          "description": "Category description"
        },
        "tool_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of tools in category"
        },
        "common_permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capability"
          },
          "description": "Commonly needed permissions"
        }
      }
    },

    "PermissionSchemeDefinition": {
      "type": "object",
      "required": ["version", "roles", "capabilities", "default_grants"],
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Permission scheme version"
        },
        "roles": {
          "type": "object",
          "patternProperties": {
            "^[a-z_]+$": {
              "$ref": "#/definitions/RoleDefinition"
            }
          },
          "description": "Role definitions"
        },
        "capabilities": {
          "type": "object",
          "patternProperties": {
            "^[a-z_]+\\.[a-z_]+$": {
              "$ref": "#/definitions/CapabilityDefinition"
            }
          },
          "description": "Capability definitions"
        },
        "default_grants": {
          "type": "object",
          "patternProperties": {
            "^[a-z_]+$": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "description": "Default capability grants per role"
        }
      }
    },

    "RoleDefinition": {
      "type": "object",
      "required": ["name", "description", "inherits"],
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable role name"
        },
        "description": {
          "type": "string",
          "description": "Role description"
        },
        "inherits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          },
          "description": "Roles this role inherits from"
        }
      }
    },

    "CapabilityDefinition": {
      "type": "object",
      "required": ["name", "description", "resource_type", "access_mode"],
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z_]+\\.[a-z_]+$",
          "description": "Capability name"
        },
        "description": {
          "type": "string",
          "description": "Capability description"
        },
        "resource_type": {
          "$ref": "#/definitions/ResourceType"
        },
        "access_mode": {
          "$ref": "#/definitions/AccessMode"
        },
        "default_scope": {
          "type": "string",
          "description": "Default scope restriction"
        }
      }
    },

    "MigrationStrategy": {
      "type": "object",
      "description": "V1 to V2 migration configuration",
      "required": ["migration_version", "field_mappings", "transformation_rules", "deprecation_timeline", "compatibility_mode"],
      "properties": {
        "migration_version": {
          "type": "string",
          "enum": ["1.0_to_2.0"],
          "description": "Migration version identifier"
        },
        "field_mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldMapping"
          },
          "description": "Field mappings between versions"
        },
        "transformation_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformationRule"
          },
          "description": "Transformation rules"
        },
        "deprecation_timeline": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeprecationPhase"
          },
          "description": "Deprecation schedule"
        },
        "compatibility_mode": {
          "$ref": "#/definitions/CompatibilitySettings"
        }
      }
    },

    "FieldMapping": {
      "type": "object",
      "required": ["v1_field", "v2_field", "required_in_v2"],
      "properties": {
        "v1_field": {
          "type": "string",
          "description": "V1 field name"
        },
        "v2_field": {
          "type": "string",
          "description": "V2 field name"
        },
        "transformation": {
          "type": "string",
          "description": "How to transform value"
        },
        "required_in_v2": {
          "type": "boolean",
          "description": "Is field required in v2"
        }
      }
    },

    "TransformationRule": {
      "type": "object",
      "required": ["applies_to", "rule_type", "rule_definition"],
      "properties": {
        "applies_to": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Which tools this rule applies to"
        },
        "rule_type": {
          "type": "string",
          "enum": ["rename", "restructure", "validate", "enrich"],
          "description": "Type of transformation rule"
        },
        "rule_definition": {
          "type": "object",
          "description": "Rule-specific configuration"
        }
      }
    },

    "DeprecationPhase": {
      "type": "object",
      "required": ["phase_name", "start_date", "end_date", "actions"],
      "properties": {
        "phase_name": {
          "type": "string",
          "description": "Phase identifier"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "When phase begins"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "When phase ends"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeprecationAction"
          },
          "description": "Actions in this phase"
        }
      }
    },

    "DeprecationAction": {
      "type": "object",
      "required": ["action_type", "target", "message", "alternative"],
      "properties": {
        "action_type": {
          "type": "string",
          "enum": ["warn", "redirect", "disable", "remove"],
          "description": "Type of deprecation action"
        },
        "target": {
          "type": "string",
          "description": "What's being deprecated"
        },
        "message": {
          "type": "string",
          "description": "User-facing message"
        },
        "alternative": {
          "type": "string",
          "description": "Recommended alternative"
        }
      }
    },

    "CompatibilitySettings": {
      "type": "object",
      "required": ["enable_v1_mode", "v1_warning_level", "v1_redirect_mode", "v1_support_end_date"],
      "properties": {
        "enable_v1_mode": {
          "type": "boolean",
          "description": "Allow v1 tool calls"
        },
        "v1_warning_level": {
          "type": "string",
          "enum": ["none", "log", "user_facing"],
          "description": "Level of v1 deprecation warnings"
        },
        "v1_redirect_mode": {
          "type": "string",
          "enum": ["transparent", "explicit"],
          "description": "How v1 calls are redirected to v2"
        },
        "v1_support_end_date": {
          "type": "string",
          "format": "date",
          "description": "When v1 support ends"
        }
      }
    }
  },

  "oneOf": [
    {
      "title": "Tool Response",
      "description": "Response from a tool execution",
      "$ref": "#/definitions/ToolResponse"
    },
    {
      "title": "Tool Definition",
      "description": "Definition of a tool for registration",
      "$ref": "#/definitions/ToolDefinition"
    },
    {
      "title": "Tool Registry",
      "description": "Complete tool registry",
      "$ref": "#/definitions/ToolRegistry"
    },
    {
      "title": "Migration Strategy",
      "description": "V1 to V2 migration configuration",
      "$ref": "#/definitions/MigrationStrategy"
    }
  ]
}