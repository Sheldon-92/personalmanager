{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://personalmanager.ai/schemas/explain/v1.0.0",
  "title": "PersonalManager Explain Protocol",
  "description": "JSON Schema for AI explanation responses in PersonalManager",
  "version": "1.0.0",

  "type": "object",
  "required": ["status", "command", "data", "metadata"],
  "properties": {
    "status": {
      "type": "string",
      "enum": ["success", "failed", "error"],
      "description": "Overall response status"
    },
    "command": {
      "type": "string",
      "enum": ["ai.explain", "explain.task", "explain.project", "explain.time"],
      "description": "Command that generated this explanation"
    },
    "data": {
      "oneOf": [
        { "$ref": "#/definitions/ExplanationData" },
        { "type": "null" }
      ]
    },
    "error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "INTERNAL_ERROR",
            "API_KEY_NOT_CONFIGURED",
            "SERVICE_UNAVAILABLE",
            "INVALID_REQUEST",
            "RATE_LIMIT_EXCEEDED",
            "NOT_IMPLEMENTED",
            "EXPLAIN_SUBJECT_NOT_FOUND",
            "EXPLAIN_INSUFFICIENT_DATA",
            "EXPLAIN_MODEL_UNAVAILABLE",
            "EXPLAIN_TIMEOUT",
            "EXPLAIN_FACTOR_FAILED",
            "EXPLAIN_LOW_CONFIDENCE",
            "EXPLAIN_UNSUPPORTED_TYPE"
          ]
        },
        "message": {
          "type": "string",
          "description": "Human-readable error message"
        },
        "details": {
          "type": "object",
          "description": "Additional error context"
        }
      },
      "required": ["code", "message"]
    },
    "metadata": {
      "type": "object",
      "required": ["version", "execution_time", "explanation_type", "confidence_level"],
      "properties": {
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Protocol version (semver)"
        },
        "execution_time": {
          "type": "number",
          "minimum": 0,
          "description": "Execution time in seconds"
        },
        "explanation_type": {
          "type": "string",
          "enum": ["task", "project", "time", "habit", "decision", "comparative"],
          "description": "Type of explanation provided"
        },
        "confidence_level": {
          "type": "string",
          "enum": ["high", "medium", "low"],
          "description": "Overall confidence in explanation quality"
        }
      }
    }
  },

  "definitions": {
    "ExplanationData": {
      "type": "object",
      "required": ["subject", "reasoning", "factors", "confidence", "recommendations", "context"],
      "properties": {
        "subject": { "$ref": "#/definitions/SubjectInfo" },
        "reasoning": { "$ref": "#/definitions/ReasoningChain" },
        "factors": { "$ref": "#/definitions/FactorAnalysis" },
        "confidence": { "$ref": "#/definitions/ConfidenceMetrics" },
        "recommendations": { "$ref": "#/definitions/ActionableInsights" },
        "context": { "$ref": "#/definitions/ExplanationContext" }
      }
    },

    "SubjectInfo": {
      "type": "object",
      "required": ["id", "type", "title", "metadata"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the subject"
        },
        "type": {
          "type": "string",
          "enum": ["task", "project", "habit", "time_slot", "decision"],
          "description": "Type of subject being explained"
        },
        "title": {
          "type": "string",
          "minLength": 1,
          "description": "Human-readable name"
        },
        "description": {
          "type": "string",
          "description": "Optional detailed description"
        },
        "metadata": {
          "type": "object",
          "required": ["created_at", "updated_at"],
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            },
            "priority": {
              "type": "string",
              "enum": ["low", "medium", "high"]
            },
            "status": {
              "type": "string",
              "description": "Domain-specific status"
            }
          }
        }
      }
    },

    "ReasoningChain": {
      "type": "object",
      "required": ["total_steps", "steps", "primary_logic"],
      "properties": {
        "total_steps": {
          "type": "integer",
          "minimum": 1
        },
        "steps": {
          "type": "array",
          "items": { "$ref": "#/definitions/ReasoningStep" },
          "minItems": 1
        },
        "primary_logic": {
          "type": "string",
          "description": "Main reasoning approach used"
        },
        "fallback_logic": {
          "type": "string",
          "description": "Alternative reasoning if primary fails"
        }
      }
    },

    "ReasoningStep": {
      "type": "object",
      "required": ["step_number", "description", "rationale", "input_data", "output_result", "confidence", "execution_time_ms"],
      "properties": {
        "step_number": {
          "type": "integer",
          "minimum": 1
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "rationale": {
          "type": "string",
          "minLength": 1
        },
        "input_data": {
          "type": "object"
        },
        "output_result": {},
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "execution_time_ms": {
          "type": "number",
          "minimum": 0
        }
      }
    },

    "FactorAnalysis": {
      "type": "object",
      "required": ["total_score", "normalization_method", "factors"],
      "properties": {
        "total_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 10
        },
        "normalization_method": {
          "type": "string",
          "enum": ["weighted_average", "max_score", "min_max_scaling", "z_score"],
          "description": "Method used to combine factor scores"
        },
        "factors": {
          "type": "array",
          "items": { "$ref": "#/definitions/Factor" },
          "minItems": 1
        },
        "factor_interactions": {
          "type": "array",
          "items": { "$ref": "#/definitions/FactorInteraction" }
        }
      }
    },

    "Factor": {
      "type": "object",
      "required": ["id", "name", "category", "raw_score", "weight", "weighted_contribution", "confidence", "evidence", "calculation_method"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-z_]+$"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "category": {
          "type": "string",
          "enum": ["framework", "context", "temporal", "personal", "system"]
        },
        "raw_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "weight": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "weighted_contribution": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "theory_basis": {
          "type": "object",
          "required": ["framework", "reference", "concept"],
          "properties": {
            "framework": {
              "type": "string",
              "enum": ["GTD", "4DX", "OKR", "Atomic Habits", "Full Engagement", "Essentialism", "Custom"]
            },
            "reference": {
              "type": "string"
            },
            "concept": {
              "type": "string"
            }
          }
        },
        "evidence": {
          "type": "array",
          "items": { "$ref": "#/definitions/Evidence" }
        },
        "calculation_method": {
          "type": "string",
          "minLength": 1
        },
        "sensitivity_analysis": {
          "type": "object",
          "properties": {
            "high_impact_threshold": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "low_impact_threshold": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          }
        }
      }
    },

    "Evidence": {
      "type": "object",
      "required": ["type", "description", "value", "weight", "source"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["data_point", "pattern", "rule", "heuristic"]
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "value": {},
        "weight": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "source": {
          "type": "string",
          "minLength": 1
        }
      }
    },

    "FactorInteraction": {
      "type": "object",
      "required": ["factor_ids", "interaction_type", "strength", "description"],
      "properties": {
        "factor_ids": {
          "type": "array",
          "items": { "type": "string" },
          "minItems": 2
        },
        "interaction_type": {
          "type": "string",
          "enum": ["synergy", "conflict", "dependency"]
        },
        "strength": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "description": {
          "type": "string",
          "minLength": 1
        }
      }
    },

    "ConfidenceMetrics": {
      "type": "object",
      "required": ["overall_confidence", "confidence_level", "confidence_breakdown"],
      "properties": {
        "overall_confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "confidence_level": {
          "type": "string",
          "enum": ["high", "medium", "low"]
        },
        "confidence_breakdown": {
          "type": "object",
          "required": ["data_quality", "model_certainty", "factor_agreement", "historical_accuracy"],
          "properties": {
            "data_quality": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "model_certainty": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "factor_agreement": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            },
            "historical_accuracy": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          }
        },
        "uncertainty_factors": {
          "type": "array",
          "items": { "type": "string" }
        },
        "confidence_interval": {
          "type": "object",
          "properties": {
            "lower_bound": { "type": "number" },
            "upper_bound": { "type": "number" },
            "confidence_level": {
              "type": "number",
              "minimum": 0,
              "maximum": 1
            }
          }
        }
      }
    },

    "ActionableInsights": {
      "type": "object",
      "required": ["primary_recommendation"],
      "properties": {
        "primary_recommendation": {
          "type": "object",
          "required": ["action", "rationale", "expected_impact", "effort_level", "time_sensitivity"],
          "properties": {
            "action": {
              "type": "string",
              "minLength": 1
            },
            "rationale": {
              "type": "string",
              "minLength": 1
            },
            "expected_impact": {
              "type": "string",
              "minLength": 1
            },
            "effort_level": {
              "type": "string",
              "enum": ["low", "medium", "high"]
            },
            "time_sensitivity": {
              "type": "string",
              "enum": ["immediate", "today", "this_week", "flexible"]
            }
          }
        },
        "alternative_options": {
          "type": "array",
          "items": { "$ref": "#/definitions/AlternativeOption" }
        },
        "optimization_suggestions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["category", "suggestion", "potential_improvement"],
            "properties": {
              "category": { "type": "string" },
              "suggestion": { "type": "string" },
              "potential_improvement": { "type": "string" }
            }
          }
        },
        "warning_flags": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["type", "description", "severity"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["risk", "constraint", "dependency", "assumption"]
              },
              "description": { "type": "string" },
              "severity": {
                "type": "string",
                "enum": ["low", "medium", "high"]
              },
              "mitigation": { "type": "string" }
            }
          }
        }
      }
    },

    "AlternativeOption": {
      "type": "object",
      "required": ["option_id", "description", "pros", "cons", "score_difference", "use_case"],
      "properties": {
        "option_id": { "type": "string" },
        "description": { "type": "string" },
        "pros": {
          "type": "array",
          "items": { "type": "string" }
        },
        "cons": {
          "type": "array",
          "items": { "type": "string" }
        },
        "score_difference": { "type": "number" },
        "use_case": { "type": "string" }
      }
    },

    "ExplanationContext": {
      "type": "object",
      "required": ["temporal", "environmental", "personalization", "data_sources"],
      "properties": {
        "temporal": {
          "type": "object",
          "required": ["current_time", "time_horizon"],
          "properties": {
            "current_time": {
              "type": "string",
              "format": "date-time"
            },
            "time_horizon": { "type": "string" },
            "relevant_time_constraints": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        },
        "environmental": {
          "type": "object",
          "properties": {
            "user_state": {
              "type": "object",
              "properties": {
                "energy_level": {
                  "type": "string",
                  "enum": ["low", "medium", "high"]
                },
                "available_time": {
                  "type": "integer",
                  "minimum": 0
                },
                "current_context": { "type": "string" },
                "mood": { "type": "string" }
              }
            },
            "system_state": {
              "type": "object",
              "properties": {
                "active_projects": {
                  "type": "integer",
                  "minimum": 0
                },
                "pending_tasks": {
                  "type": "integer",
                  "minimum": 0
                },
                "recent_completions": {
                  "type": "integer",
                  "minimum": 0
                },
                "system_load": {
                  "type": "string",
                  "enum": ["light", "moderate", "heavy"]
                }
              }
            }
          }
        },
        "personalization": {
          "type": "object",
          "properties": {
            "user_preferences": { "type": "object" },
            "historical_patterns": {
              "type": "array",
              "items": { "type": "string" }
            },
            "success_factors": {
              "type": "array",
              "items": { "type": "string" }
            },
            "avoid_factors": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        },
        "data_sources": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["source_name", "data_freshness", "reliability_score", "data_points_used"],
            "properties": {
              "source_name": { "type": "string" },
              "data_freshness": { "type": "string" },
              "reliability_score": {
                "type": "number",
                "minimum": 0,
                "maximum": 1
              },
              "data_points_used": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        }
      }
    }
  }
}